SPEAR:

  # Launch Unreal application via different modes:
  # - "standalone_executable" launches a packaged executable of an Unreal Engine project
  # - "uproject" launches an uproject with Unreal Engine editor executable
  # - "running_instance" connects to an already running instance of Unreal Engine
  LAUNCH_MODE: ""

  # If launch_mode is "standalone_exectuable", specify this path to an Unreal application.
  STANDALONE_EXECUTABLE: ""

  # If launch_mode is "uproject", specify this path to your Unreal Engine editor executable.
  UNREAL_EDITOR_EXECUTABLE: ""

  # If launch_mode is "uproject", specify this path to your uproject file.
  UPROJECT: ""
  
  # Set this parameter to true True to launch the executable in headless mode. Has no effect
  # if launch_mode is "running_instance".
  RENDER_OFFSCREEN: False

  # If not running in headless mode, these parameters specify the window resolution used for
  # on-screen rendering. Has no effect on the size of the visual observations returned by the
  # application via the RPC server.
  WINDOW_RESOLUTION_X: 512
  WINDOW_RESOLUTION_Y: 512
  
  # Launch your Unreal application on the GPU specified by GPU_ID.
  GPU_ID: 0

  # Log file to capture Unreal debug output that isn't captured by STDOUT and STDERR. This is
  # useful for inspecting the stack trace when an Unreal application crashes. Note that Unreal
  # only writes to this log file in Development builds. If a path is included, it will be
  # interpreted as a relative path regardless of how it is formatted, and will be interpreted
  # as relative to the following locations:
  # - macOS: /Users/user/Library/Logs/ProjectName/
  # - Linux: path/to/PackagedExecutable/LinuxNoEditor/ProjectNames/Saved/Logs/
  UNREAL_INTERNAL_LOG_FILE: ""

  # Path to a temp dir for files generated by the unrealai Python package
  TEMP_DIR: "tmp"
  
  # List of custom command-line arguments passed to the Unreal application. This is useful
  # when the Unreal application is built with a plugin that expects its own set of
  # command-line arguments.
  CUSTOM_COMMAND_LINE_ARGUMENTS: []

  # This parameter can be used for additional control over which Vulkan devices are recognized
  # by Unreal. This parameter can be useful to force Unreal to use an NVIDIA GPU. Only has an
  # effect on Linux. See
  # https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/blob/master/loader/LoaderAndLayerInterface.md
  VULKAN_DEVICE_FILES: ""
  
  # Maximum time to wait when initializing the RPC client before asserting
  RPC_CLIENT_INITIALIZE_CONNECTION_MAX_TIME_SECONDS: 120.0

  # Sleep for this amount of time in-between attempts to initialize the RPC client
  RPC_CLIENT_INITIALIZE_CONNECTION_SLEEP_TIME_SECONDS: 1.0

  # The RPC client will try this number of reconnection attempts before returning from its
  # constructor.
  RPC_CLIENT_INTERNAL_RECONNECT_LIMIT: 1

  # Once a connection has been established, the RPC client will wait for this amount of
  # time before throwing when calling a server function.
  RPC_CLIENT_INTERNAL_TIMEOUT_SECONDS: 1.0
